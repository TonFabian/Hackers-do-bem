stages:
  - build
  - lint
  - test
  - security
  - review
  - deploy
  - dast

# Estágio de Build
build:
  stage: build
  script:
    - echo "Starting build process..."
    # Adicione seus comandos de construção específicos aqui, se necessário

# Estágio de Análise Estática de Código (SAST) com Bandit
lint:
  stage: lint
  image: python:3.9
  script:
    - pip install --upgrade pip
    - pip install bandit
    - bandit -r todo_project/todo_project -f html -o bandit-report.html || true
  artifacts:
    paths:
      - bandit-report.html
    expire_in: 1 week

# Estágio de Análise de Dependência com OWASP Dependency-Check
dependency_check:
  stage: security
  image: owasp/dependency-check:latest
  script:
    - dependency-check.sh --project "My Project" --scan todo_project/todo_project --out dependency-check-report.html
  artifacts:
    paths:
      - dependency-check-report.html
    expire_in: 1 week
  allow_failure: true

# Estágio de Testes
test:
  stage: test
  image: python:3.9
  cache:
    paths:
      - .cache/pip
  before_script:
    - pip install --upgrade pip
    - pip install -r requirements.txt
  script:
    - pytest --maxfail=1 --disable-warnings -q

# Revisão: Criação do ambiente temporário para cada merge request
review:
  stage: review
  script:
    - echo "Creating review environment"
    - # Comandos para criar e configurar o ambiente temporário de revisão
    - # Por exemplo, copiar arquivos, configurar banco de dados, etc.
  only:
    - merge_requests

# Deploy em Estágio: Implantação no ambiente de stage
deploy_stage:
  stage: deploy
  script:
    - echo "Deploying to staging environment"
    - # Comandos para implantar no ambiente de staging
    - # Por exemplo, copiar arquivos, atualizar banco de dados, etc.
  only:
    - master
  when: manual  # Adicione `when: manual` se você precisar de aprovação manual para deploy

# Testes de Segurança Dinâmicos com OWASP ZAP
dast:
  stage: dast
  image: owasp/zap2docker-stable
  script:
    - echo "Running OWASP ZAP DAST"
    - zap.sh -cmd -quickurl http://your-staging-url -quickout zap_report.html
  artifacts:
    paths:
      - zap_report.html
  only:
    - master
  when: manual  # Adicione `when: manual` se você precisar de aprovação manual para os testes
